
Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git config --global user.name
harsh

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git config --global user.email
hg.harsh28@gmail.com

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git config --global user.name
harsh

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo
$ git config --global user.email
hg.harsh28@gmail.com

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo
$ code .

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo
$ git init
Initialized empty Git repository in C:/Users/Harsh Gupta/Desktop/GitInOneVideo/.git/

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ ls -lart
total 12
drwxr-xr-x 1 Harsh Gupta 197609 0 Dec 10 13:47 ../
-rw-r--r-- 1 Harsh Gupta 197609 0 Dec 10 19:34 index.html
drwxr-xr-x 1 Harsh Gupta 197609 0 Dec 10 19:35 ./
drwxr-xr-x 1 Harsh Gupta 197609 0 Dec 10 19:35 .git/

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add index.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit
[master (root-commit) f45cf55] Initial commit
 1 file changed, 11 insertions(+)
 create mode 100644 index.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch about.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch contact.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        about.html
        contact.html
        monuments.html

nothing added to commit but untracked files present (use "git add" to track)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   about.html
        new file:   contact.html
        new file:   monuments.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   about.html
        new file:   contact.html
        new file:   monuments.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   contact.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   about.html
        new file:   contact.html
        new file:   monuments.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   about.html
        new file:   contact.html
        new file:   monuments.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -m "Added more Html's"
[master 34441c5] Added more Html's
 3 files changed, 11 insertions(+)
 create mode 100644 about.html
 create mode 100644 contact.html
 create mode 100644 monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout contact.html
Updated 1 path from the index

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git log
commit 34441c51d7b585477a98218d1c2f40ebd0041c27 (HEAD -> master)
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 20:03:51 2020 +0530

    Added more Html's

commit f45cf55f224173f85dee6a93f1c9cdc5897e81ed
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 19:53:32 2020 +0530

    Initial commit

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git log -p -4
commit 34441c51d7b585477a98218d1c2f40ebd0041c27 (HEAD -> master)
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 20:03:51 2020 +0530

    Added more Html's

diff --git a/about.html b/about.html
new file mode 100644
index 0000000..e69de29
diff --git a/contact.html b/contact.html
new file mode 100644
index 0000000..d01f779
--- /dev/null
+++ b/contact.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Document</title>
+</head>
+<body>
+
+</body>
+</html>
\ No newline at end of file
diff --git a/monuments.html b/monuments.html
new file mode 100644
index 0000000..e69de29

commit f45cf55f224173f85dee6a93f1c9cdc5897e81ed
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 19:53:32 2020 +0530

    Initial commit

diff --git a/index.html b/index.html
new file mode 100644
index 0000000..d01f779
--- /dev/null
+++ b/index.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Document</title>
+</head>
+<body>
+
+</body>
+</html>
\ No newline at end of file

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git diff
diff --git a/index.html b/index.html
index d01f779..51dcbfd 100644
--- a/index.html
+++ b/index.html
@@ -5,7 +5,7 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Document</title>
 </head>
-<body>
+<body harsh>

 </body>
 </html>
\ No newline at end of file

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git diff

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git diff
diff --git a/index.html b/index.html
index 51dcbfd..10483a1 100644
--- a/index.html
+++ b/index.html
@@ -5,7 +5,7 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Document</title>
 </head>
-<body harsh>
+<body harshita>

 </body>
 </html>
\ No newline at end of file

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git dif --staged
git: 'dif' is not a git command. See 'git --help'.

The most similar commands are
        diff
        config
        difftool
        init

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git diff --staged
diff --git a/index.html b/index.html
index d01f779..10483a1 100644
--- a/index.html
+++ b/index.html
@@ -5,7 +5,7 @@
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <title>Document</title>
 </head>
-<body>
+<body harshita>

 </body>
 </html>
\ No newline at end of file

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout -f

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "skipped staging area <"
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "skipped staging area <"
[master 1117dcb] skipped staging area <
 1 file changed, 1 insertion(+), 1 deletion(-)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git log
commit 1117dcb688d9cf3c47b0fbb5264f69ea41e59946 (HEAD -> master)
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 22:33:58 2020 +0530

    skipped staging area <

commit 34441c51d7b585477a98218d1c2f40ebd0041c27
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 20:03:51 2020 +0530

    Added more Html's

commit f45cf55f224173f85dee6a93f1c9cdc5897e81ed
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 19:53:32 2020 +0530

    Initial commit

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ ls
about.html  contact.html  index.html  monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch waste.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "added waste"^C

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "waste added"
[master beabcdd] waste added
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 waste.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ ls
about.html  contact.html  index.html  monuments.html  waste.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git rm --cached waste.html
rm 'waste.html'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    waste.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        waste.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git rm waste.html
rm 'waste.html'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    waste.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ ls
about.html  contact.html  index.html  monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "removing waste"
[master cdaf57b] removing waste
 1 file changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 waste.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git log -p
commit cdaf57bb5eb3c7e83c062d9f0d97b1e12b2b1bd9 (HEAD -> master)
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 22:41:49 2020 +0530

    removing waste

diff --git a/waste.html b/waste.html
deleted file mode 100644
index e69de29..0000000

commit beabcddcd8d9c66161bdd033da994a22b244d743
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 22:36:50 2020 +0530

    waste added

diff --git a/waste.html b/waste.html
new file mode 100644
index 0000000..e69de29

commit 1117dcb688d9cf3c47b0fbb5264f69ea41e59946
Author: harsh <hg.harsh28@gmail.com>
Date:   Thu Dec 10 22:33:58 2020 +0530

    skipped staging area <


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status -s
 M about.html
 M contact.html
 M monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status -s
M  about.html
M  contact.html
M  monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status -s
M  about.html
M  contact.html
 M index.html
M  monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status -s
M  about.html
M  contact.html
 M index.html
M  monuments.html

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch.gitignore
bash: touch.gitignore: command not found

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch .gitignore

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   about.html
        modified:   contact.html
        modified:   monuments.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch .mylogs.log

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   about.html
        modified:   contact.html
        modified:   monuments.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ touch mylogs.log

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   about.html
        modified:   contact.html
        modified:   monuments.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        mylogs.log


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   about.html
        modified:   contact.html
        modified:   monuments.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   about.html
        modified:   contact.html
        modified:   index.html
        modified:   monuments.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   about.html
        modified:   contact.html
        modified:   index.html
        modified:   monuments.html


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$  git commit -a -m "ignored some files and added gitignored"
[master 9086ce0] ignored some files and added gitignored
 5 files changed, 25 insertions(+), 2 deletions(-)
 create mode 100644 .gitignore

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        logs/

nothing added to commit but untracked files present (use "git add" to track)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   logs/mylogs.logs


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git rm --cached mylogs.log
fatal: pathspec 'mylogs.log' did not match any files

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git rm --cached logs/mylogs.log
fatal: pathspec 'logs/mylogs.log' did not match any files

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   logs/mylogs.logs


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ ^C

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ rm --cached logs/mylogs.logs
rm: unknown option -- cached
Try 'rm --help' for more information.

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git rm --cached logs/mylogs.logs
rm 'logs/mylogs.logs'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        logs/

nothing added to commit but untracked files present (use "git add" to track)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ignore/


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   .gitignore


Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git commit -a -m "commit message"
[master e6855f2] commit message
 1 file changed, 3 insertions(+), 1 deletion(-)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git branch feature1

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git branch
  feature1
* master

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout feature1
Switched to branch 'feature1'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git status
On branch feature1
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git status
On branch feature1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git add -A

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git commit -m "fixed and added good"
[feature1 66224c9] fixed and added good
 1 file changed, 1 insertion(+), 1 deletion(-)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git status
On branch feature1
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git checkout master
Switched to branch 'master'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout feature1
Switched to branch 'feature1'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git commit -m "fixed and added good"
On branch feature1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git status
On branch feature1
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   contact.html

no changes added to commit (use "git add" and/or "git commit -a")

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git commit -a -m "fixed and added good"
[feature1 30ac79f] fixed and added good
 1 file changed, 2 insertions(+)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git status
On branch feature1
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git checkout master
Switched to branch 'master'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git merge featue1
merge: featue1 - not something we can merge

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git merge feature1
Updating e6855f2..30ac79f
Fast-forward
 contact.html | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git status
On branch master
nothing to commit, working tree clean

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git remote add origin git@github.com:harshgupta28/myFirstRepo.git

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git push origin master
Enumerating objects: 26, done.
Counting objects: 100% (26/26), done.
Delta compression using up to 8 threads
Compressing objects: 100% (22/22), done.
Writing objects: 100% (26/26), 2.20 KiB | 93.00 KiB/s, done.
Total 26 (delta 11), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (11/11), done.
To github.com:harshgupta28/myFirstRepo.git
 * [new branch]      master -> master

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout
HEAD            feature1        origin/master
ORIG_HEAD       master

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (master)
$ git checkout feature1
Switched to branch 'feature1'

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$ git push origin feature1
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'feature1' on GitHub by visiting:
remote:      https://github.com/harshgupta28/myFirstRepo/pull/new/feature1
remote:
To github.com:harshgupta28/myFirstRepo.git
 * [new branch]      feature1 -> feature1

Harsh Gupta@iamharsh MINGW64 ~/Desktop/GitInOneVideo (feature1)
$
